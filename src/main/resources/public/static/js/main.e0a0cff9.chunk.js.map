{"version":3,"sources":["modules/abalon-game/AbalonGameConstants.js","modules/abalon-game/AbalonBoardTile.js","modules/abalon-game/AbalonBoard.js","modules/abalon-game/AbalonGame.js","components/BoardGame/BoardGame.jsx","reducers/abalonGame/abalonGameActions.js","reducers/abalonGame/abalonGameTypes.js","constants.js","reducers/abalonGame/abalonGameReducer.js","components/AbalonGamePage/initialBoardState.js","components/AbalonGamePage/AbalonGamePage.jsx","components/StartPage/StartPage.jsx","App.js","serviceWorker.js","index.js","assets/empty-marked.png","assets/black-ball.png","assets/black-marked.png","assets/black-ball-light-yellow.png","assets/white-ball.png","assets/white-marked.png","assets/white-ball-light-yellow.png","assets/back-board.jpg","assets/instructions.png","assets/instructions2.png"],"names":["Players","TileContent","AbalonBoardTile","content","this","mathFunction","num","AbalonBoard","initialValues","boardMat","rowIndex","row","Array","columnIndex","initTileState","find","x","column","tile","length","push","boardState","i","rowState","j","AbalonGame","initialBoardState","turn","board","getTile","setTile","BoardGame","props","useContext","AbalonGameContext","abalonGameState","abalonGameDispatch","useImage","blackBallURL","blackBallImage","whiteBallURL","whiteBallImage","blackBallYellowURL","blackBallYellowImage","whiteBallYellowURL","whiteBallYellowImage","backBoardURL","backBoardImage","emptyMarkedURL","emptyMarkedImage","whiteBallMarkedURL","whiteBallMarkedImage","blackBallMarkedURL","blackBallMarkedImage","selectedTileState","abalonGame","getBoardState","tileToImage","width","height","image","map","tileState","mathFunction2","y","tilePositionToCoordinates","key","onClick","e","type","payload","gameFirstSelection","handleTileClick","onMouseEnter","document","body","style","cursor","onMouseLeave","AppRoutes","objectShallowClone","obj","prototype","Object","copyObj","create","assign","abalonGameInit","abalonGameReducer","state","action","abalonGameCopy","markTileSelected","unmarkTileSelected","initialTiles","React","createContext","useStyles","makeStyles","theme","pageTitle","color","fontFamily","turnHeader","fontSize","position","right","appBar","display","alignItems","containerBox","boxButton","background","marginTop","marginBottom","AbalonGamePage","useReducer","classes","Provider","value","className","flexGrow","Typography","Divider","justifyContent","boxTitle","boxSubHeader","boxContent","borderWidth","borderRadius","borderColor","borderStyle","paddingTop","paddingBottom","paddingLeft","paddingRight","StartPage","useState","isInstructionsDialogOpen","setIsInstructionsDialogOpen","Dialog","fullScreen","onClose","aria-labelledby","open","Button","src","instructionsURL","instructions2URL","Box","variant","flexDirection","getElementById","click","id","to","App","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.e0a0cff9.chunk.js","sourcesContent":["\r\nconst Players = {\r\n    Black: \"BLACK_PLAYER\",\r\n    White: \"WHITE_PLAYER\"\r\n}\r\n\r\nconst TileContent = {\r\n    BlackSoldier: \"BlackSoldier\",\r\n    WhiteSoldier: \"WhiteSoldier\",\r\n    Empty: \"Empty\",\r\n\r\n    BlackSoldierMarkedAction: \"BlackSoldierMarkedAction\",\r\n    WhiteSoldierMarkedAction: \"WhiteSoldierMarkedAction\",\r\n    EmptyMarkedAction: \"EmptyMarkedAction\",\r\n    \r\n    BlackSoldierMarkedSelection: \"BlackSoldierMarkedSelection\",\r\n    WhiteSoldierMarkedSelection: \"WhiteSoldierMarkedSelection\",\r\n}\r\n\r\nexport {\r\n    Players,\r\n    TileContent\r\n}","import { TileContent } from \"./AbalonGameConstants\"\r\n\r\n\r\nclass AbalonBoardTile {\r\n    /**\r\n     * \r\n     * @param {String} content \r\n     */\r\n    constructor(content) {\r\n        this.content = content\r\n    }\r\n\r\n    \r\n}\r\n\r\n\r\nexport {\r\n    AbalonBoardTile\r\n}","import { AbalonBoardTile } from \"./AbalonBoardTile\"\r\nimport { TileContent } from \"./AbalonGameConstants\"\r\n\r\n/*\r\nlogic representation: \r\n\r\n1         [1, 2, 3, 4, 5]\r\n2        [1, 2, 3, 4, 5, 6]\r\n3      [1, 2, 3, 4, 5, 6, 7]\r\n4    [1, 2, 3, 4, 5, 6, 7, 8]\r\n5   [1, 2, 3, 4, 5, 6, 7, 8, 9]\r\n6    [1, 2, 3, 4, 5, 6, 7, 8]\r\n7      [1, 2, 3, 4, 5, 6, 7]\r\n8        [1, 2, 3, 4, 5, 6]\r\n9         [1, 2, 3, 4, 5]\r\n\r\ninside the matrix, all the numbers above will be decremented (because arrays start at index 0)\r\n*/\r\n\r\n/**\r\n * \r\n * @param {Number} num \r\n */\r\nconst mathFunction = (num) => {\r\n    if (num >=0 && num <= 4) {\r\n        return num\r\n    } else if (num >=5 && num <= 8) {\r\n        return 8 - num\r\n    }\r\n    return 0\r\n}\r\n\r\nclass AbalonBoard {\r\n    /**\r\n     * \r\n     * @param {Array<{row: Number, column: Number, tile: AbalonBoardTile}>} initialValues \r\n     */\r\n    constructor(initialValues = []) {\r\n        /**@type {Array<Array<AbalonBoardTile>>} */\r\n        this.boardMat = []\r\n\r\n        for (let rowIndex = 0; rowIndex < 9; rowIndex++) {\r\n            const row = new Array(5 + mathFunction(rowIndex))\r\n\r\n            for (let columnIndex = 0; columnIndex < row.length; columnIndex++) {\r\n                const initTileState = initialValues.find(x => x.row === rowIndex && x.column === columnIndex)\r\n\r\n                if (initTileState) {\r\n                    row[columnIndex] = initTileState.tile\r\n                } else {\r\n                    row[columnIndex] = new AbalonBoardTile(TileContent.Empty)\r\n                }\r\n            }\r\n\r\n            this.boardMat.push(row)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Number} row \r\n     * @param {Number} column \r\n     * @returns {AbalonBoardTile}\r\n     */\r\n    getTile(row, column) {\r\n        return this.boardMat[row][column]\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Number} row \r\n     * @param {Number} column \r\n     * @param {String} content \r\n     */\r\n    setTile(row, column, content) {\r\n        this.boardMat[row][column] = new AbalonBoardTile(content)\r\n    }\r\n\r\n    /**\r\n     * @returns {Array<Array<{row: Number, column: Number, tile: AbalonBoardTile}>>}\r\n     */\r\n    getBoardState() {\r\n        const boardState = []\r\n\r\n        for (let i = 0; i < this.boardMat.length; i++) {\r\n            const row = this.boardMat[i];\r\n            \r\n            const rowState = []\r\n            for (let j = 0; j < row.length; j++) {\r\n                const tile = row[j];\r\n                \r\n                rowState.push({\r\n                    row: i, column: j, tile\r\n                })\r\n            }\r\n\r\n            boardState.push(rowState)\r\n        }\r\n\r\n        return boardState\r\n    }\r\n}\r\n\r\nexport {\r\n    AbalonBoard\r\n}","import { AbalonBoard } from \"./AbalonBoard\"\r\nimport { Players, TileContent } from \"./AbalonGameConstants\";\r\n\r\nclass AbalonGame {\r\n    constructor(initialBoardState = [], turn = Players.Black) {\r\n        /**@member {AbalonBoard} */\r\n        this.board = new AbalonBoard(initialBoardState)\r\n        /**@member {String} */\r\n        this.turn = turn\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Number} row \r\n     * @param {Number} column \r\n     * @returns {Boolean} true if tile could be marked, otherwise false\r\n     */\r\n    markTileSelected(row, column) {\r\n        const { content } = this.board.getTile(row, column)\r\n        \r\n        switch (content) {\r\n            case TileContent.BlackSoldier:\r\n                this.board.setTile(row, column, TileContent.BlackSoldierMarkedSelection)\r\n                return true\r\n            case TileContent.WhiteSoldier:\r\n                this.board.setTile(row, column, TileContent.WhiteSoldierMarkedSelection)\r\n                return true\r\n            default:\r\n                return false\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Number} row \r\n     * @param {Number} column \r\n     * @returns {Boolean} true if tile could be marked, otherwise false\r\n     */\r\n    markTileAction(row, column) {\r\n        const { content } = this.board.getTile(row, column)\r\n        \r\n        switch (content) {\r\n            case TileContent.BlackSoldier:\r\n                this.board.setTile(row, column, TileContent.BlackSoldierMarkedAction)\r\n                return true\r\n            case TileContent.WhiteSoldier:\r\n                this.board.setTile(row, column, TileContent.WhiteSoldierMarkedAction)\r\n                return true\r\n            case TileContent.Empty:\r\n                this.board.setTile(row, column, TileContent.EmptyMarkedAction)\r\n                return true\r\n            default:\r\n                return false\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Number} row \r\n     * @param {Number} column \r\n     * @returns {Boolean} true if tile could be marked, otherwise false\r\n     */\r\n    unmarkTileSelected(row, column) {\r\n        const { content } = this.board.getTile(row, column)\r\n        \r\n        switch (content) {\r\n            case TileContent.BlackSoldierMarkedSelection:\r\n                this.board.setTile(row, column, TileContent.BlackSoldier)\r\n                return true\r\n            case TileContent.WhiteSoldierMarkedSelection:\r\n                this.board.setTile(row, column, TileContent.WhiteSoldier)\r\n                return true\r\n            default:\r\n                return false\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Number} row \r\n     * @param {Number} column \r\n     * @returns {Boolean} true if tile could be marked, otherwise false\r\n     */\r\n    unmarkTileAction(row, column) {\r\n        const { content } = this.board.getTile(row, column)\r\n        \r\n        switch (content) {\r\n            case TileContent.BlackSoldierMarkedAction:\r\n                this.board.setTile(row, column, TileContent.BlackSoldier)\r\n                return true\r\n            case TileContent.WhiteSoldierMarkedAction:\r\n                this.board.setTile(row, column, TileContent.WhiteSoldier)\r\n                return true\r\n            case TileContent.EmptyMarkedAction:\r\n                this.board.setTile(row, column, TileContent.Empty)\r\n                return true\r\n            default:\r\n                return false\r\n        }\r\n    }\r\n}\r\n\r\nexport {\r\n    AbalonGame\r\n}","import React, { useContext, useMemo } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { blackBallURL, backBoardURL, whiteBallURL, emptyMarkedURL, blackBallYellowURL,\r\n            whiteBallYellowURL, whiteBallMarkedURL, blackBallMarkedURL } from \"../../assets\";\r\nimport { Stage, Layer, Image } from 'react-konva'\r\nimport useImage from \"use-image\";\r\nimport { AbalonGame, AbalonBoardTile, TileContent } from '../../modules/abalon-game';\r\nimport { AbalonGameContext } from '../AbalonGamePage/AbalonGamePage';\r\nimport { gameFirstSelection, gameResetSelection } from '../../reducers/abalonGame/abalonGameActions';\r\n\r\nconst TILE_SIZE = 25\r\nconst PADDING_SIZE_X = 10\r\nconst PADDING_SIZE_Y = 6\r\n\r\nconst mathFunction = (num) => {\r\n    if (num >=0 && num <= 4) {\r\n        return num\r\n    } else if (num >=5 && num <= 8) {\r\n        return 8 - num\r\n    }\r\n    return 0\r\n}\r\n\r\nconst mathFunction2 = (num) => {\r\n    switch (num) {\r\n        case 0: return 0\r\n        case 1: return 2\r\n        case 2: return 8\r\n        case 3: return 11\r\n        case 4: return 18\r\n        case 5: return 11\r\n        case 6: return 8\r\n        case 7: return 2\r\n        case 8: return 0\r\n        default: return 0\r\n    }\r\n}\r\n\r\nconst tilePositionToCoordinates = (row, column) => {\r\n    const rowOffset = (4 - mathFunction(row)) * 25 / 2 - mathFunction2(row)\r\n\r\n    return {\r\n        x: rowOffset + TILE_SIZE * column + PADDING_SIZE_X * column + 65,\r\n        y: TILE_SIZE * row + 38 + PADDING_SIZE_Y * row\r\n    }\r\n}\r\n\r\nconst BoardGame = props => {\r\n    const { abalonGameState, abalonGameDispatch } = useContext(AbalonGameContext)\r\n\r\n    const [blackBallImage] = useImage(blackBallURL)\r\n    const [whiteBallImage] = useImage(whiteBallURL)\r\n    const [blackBallYellowImage] = useImage(blackBallYellowURL)\r\n    const [whiteBallYellowImage] = useImage(whiteBallYellowURL)\r\n    const [backBoardImage] = useImage(backBoardURL)\r\n    const [emptyMarkedImage] = useImage(emptyMarkedURL)\r\n    const [whiteBallMarkedImage] = useImage(whiteBallMarkedURL)\r\n    const [blackBallMarkedImage] = useImage(blackBallMarkedURL)\r\n    \r\n    const { selectedTileState } = abalonGameState\r\n    /**@type {AbalonGame} */\r\n    const abalonGame = abalonGameState.abalonGame\r\n    const boardState = abalonGame.board.getBoardState()\r\n    \r\n    /**\r\n     * @param {AbalonBoardTile} tile\r\n     */\r\n    const tileToImage = (tile) => {\r\n        switch (tile.content) {\r\n            case TileContent.WhiteSoldier:\r\n                return whiteBallImage\r\n            case TileContent.BlackSoldier:\r\n                return blackBallImage\r\n            case TileContent.BlackSoldierMarkedSelection:\r\n                return blackBallYellowImage\r\n            case TileContent.WhiteSoldierMarkedSelection:\r\n                return whiteBallYellowImage\r\n            case TileContent.EmptyMarkedAction:\r\n                return emptyMarkedImage\r\n            case TileContent.WhiteSoldierMarkedAction:\r\n                return whiteBallMarkedImage\r\n            case TileContent.BlackSoldierMarkedAction:\r\n                return blackBallMarkedImage\r\n            case TileContent.Empty:\r\n                return ''\r\n            default:\r\n                return ''\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {import('konva/types/Node').KonvaEventObject<MouseEvent>} e \r\n     * @param {{row: Number, column: Number, tile: AbalonBoardTile}} tileState\r\n     * */\r\n    const handleTileClick = (e, tileState) => {\r\n        const { row, column, tile } = tileState\r\n        \r\n        if (selectedTileState === null) { // If first select\r\n            // [TODO] fetch from server possible moves and add it to the action and state\r\n\r\n            abalonGameDispatch(gameFirstSelection(tileState))\r\n        } else { // If second select\r\n            // [TODO] check with state if the move is valid (compare the destination with possible moves in state)\r\n\r\n            // If it is, execute move with server and dispatch the new board \r\n\r\n            // Otherwise, reset the selection\r\n            abalonGameDispatch(gameResetSelection())\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Stage width={500} height={500}>\r\n            <Layer>\r\n                <Image image={backBoardImage}  />\r\n                {boardState.map(rowState => (\r\n                    rowState.map((tileState) => {\r\n                        const { x, y } = tilePositionToCoordinates(tileState.row, tileState.column) \r\n                        return (\r\n                            <Image \r\n                                key={`${tileState.row} ${tileState.column}`}\r\n                                image={tileToImage(tileState.tile)}\r\n                                width={TILE_SIZE}\r\n                                height={TILE_SIZE}\r\n                                x={x}\r\n                                y={y}\r\n                                onClick={(e) => handleTileClick(e, tileState)}\r\n                                onMouseEnter={(e) => {\r\n                                    if (tileState.tile.content !== TileContent.Empty) {\r\n                                        document.body.style.cursor = 'pointer'\r\n                                    }\r\n                                }}\r\n                                onMouseLeave={(e) => {\r\n                                    document.body.style.cursor = 'default'\r\n                                }}\r\n                            />\r\n                        )\r\n                    })\r\n                ))}\r\n            </Layer>\r\n        </Stage>\r\n    )\r\n}\r\n\r\nBoardGame.propTypes = {\r\n\r\n}\r\n\r\nexport default BoardGame\r\n","import { GAME_FIRST_SELECTION, GAME_SECOND_SELECTION, GAME_RESET_SELECTION } from \"./abalonGameTypes\"\r\n\r\n\r\nexport const gameFirstSelection = (tileState) => {\r\n    return {\r\n        type: GAME_FIRST_SELECTION,\r\n        payload: tileState\r\n    }\r\n}\r\n\r\nexport const gameSecondSelection = (tileState) => {\r\n    return {\r\n        type: GAME_SECOND_SELECTION,\r\n        payload: tileState\r\n    }\r\n}\r\n\r\nexport const gameResetSelection = () => {\r\n    return {\r\n        type: GAME_RESET_SELECTION\r\n    }\r\n}","export const GAME_FIRST_SELECTION = \"GAME_FIRST_SELECTION\"\r\nexport const GAME_SECOND_SELECTION = \"GAME_SECOND_SELECTION\"\r\nexport const GAME_RESET_SELECTION = \"GAME_RESET_SELECTION\"","export const AppRoutes = {\r\n    startPage: '/',\r\n    abalonGamePage: '/game'\r\n}\r\n\r\n\r\n/**\r\n * \r\n * @param {Object} obj \r\n * @param {Object} prototype \r\n * @returns {Object}\r\n */\r\nexport const objectShallowClone = (obj, prototype = Object.prototype) => {\r\n    const copyObj = Object.create(prototype)\r\n    Object.assign(copyObj, obj)\r\n\r\n    return copyObj\r\n}","import { AbalonGame } from \"../../modules/abalon-game\"\r\nimport { GAME_FIRST_SELECTION, GAME_SECOND_SELECTION, GAME_RESET_SELECTION } from \"./abalonGameTypes\"\r\nimport { objectShallowClone } from \"../../constants\"\r\n\r\n\r\n\r\nconst abalonGameInit = (initialBoardState) => {\r\n\r\n    return {\r\n        abalonGame: new AbalonGame(initialBoardState),\r\n        selectedTileState: null\r\n    }\r\n}\r\n\r\nconst abalonGameReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case GAME_FIRST_SELECTION: {\r\n            const tileState = action.payload\r\n            const { row, column, tile } = tileState\r\n            /**@type {AbalonGame} */\r\n            const abalonGameCopy = objectShallowClone(state.abalonGame, AbalonGame.prototype)\r\n            \r\n            abalonGameCopy.markTileSelected(row, column)\r\n\r\n            // [TODO] add mark action to the possible moves when they will be provided\r\n\r\n            return {\r\n                ...state,\r\n                abalonGame: abalonGameCopy,\r\n                selectedTileState: tileState,\r\n            }\r\n        }  \r\n        case GAME_SECOND_SELECTION: {\r\n            const tileState = action.payload\r\n            const { row, column, tile } = tileState\r\n            const firstTileState = state.selectedTileState\r\n            /**@type {AbalonGame} */\r\n            const abalonGameCopy = objectShallowClone(state.abalonGame, AbalonGame.prototype)\r\n            \r\n            return {\r\n                ...state,\r\n                abalonGame: abalonGameCopy,\r\n                selectedTileState: tileState,\r\n            }\r\n        }\r\n        case GAME_RESET_SELECTION: {\r\n            /**@type {AbalonGame} */\r\n            const abalonGameCopy = objectShallowClone(state.abalonGame, AbalonGame.prototype)\r\n            const { row, column } = state.selectedTileState\r\n\r\n            abalonGameCopy.unmarkTileSelected(row, column)\r\n\r\n            // [TODO] add unmark action of all the action marked tiles\r\n\r\n            return {\r\n                ...state,\r\n                abalonGame: abalonGameCopy,\r\n                selectedTileState: null\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport {\r\n    abalonGameInit,\r\n    abalonGameReducer\r\n}","import { TileContent, AbalonBoardTile } from \"../../modules/abalon-game\"\r\n\r\nconst initialTiles = [\r\n    // row 0\r\n    {row: 0, column: 0, tile: new AbalonBoardTile(TileContent.WhiteSoldier)},\r\n    {row: 0, column: 1, tile: new AbalonBoardTile(TileContent.WhiteSoldier)},\r\n    {row: 0, column: 2, tile: new AbalonBoardTile(TileContent.WhiteSoldier)},\r\n    {row: 0, column: 3, tile: new AbalonBoardTile(TileContent.WhiteSoldier)},\r\n    {row: 0, column: 4, tile: new AbalonBoardTile(TileContent.WhiteSoldier)},\r\n\r\n    // row 1\r\n    {row: 1, column: 0, tile: new AbalonBoardTile(TileContent.WhiteSoldier)},\r\n    {row: 1, column: 1, tile: new AbalonBoardTile(TileContent.WhiteSoldier)},\r\n    {row: 1, column: 2, tile: new AbalonBoardTile(TileContent.WhiteSoldier)},\r\n    {row: 1, column: 3, tile: new AbalonBoardTile(TileContent.WhiteSoldier)},\r\n    {row: 1, column: 4, tile: new AbalonBoardTile(TileContent.WhiteSoldier)},\r\n    {row: 1, column: 5, tile: new AbalonBoardTile(TileContent.WhiteSoldier)},\r\n\r\n    // row 2\r\n    {row: 2, column: 0, tile: new AbalonBoardTile(TileContent.WhiteSoldier)},\r\n    {row: 2, column: 1, tile: new AbalonBoardTile(TileContent.WhiteSoldier)},\r\n    {row: 2, column: 2, tile: new AbalonBoardTile(TileContent.WhiteSoldier)},\r\n    {row: 2, column: 3, tile: new AbalonBoardTile(TileContent.WhiteSoldier)},\r\n    {row: 2, column: 4, tile: new AbalonBoardTile(TileContent.WhiteSoldier)},\r\n    {row: 2, column: 5, tile: new AbalonBoardTile(TileContent.WhiteSoldier)},\r\n    {row: 2, column: 6, tile: new AbalonBoardTile(TileContent.WhiteSoldier)},\r\n    \r\n    // row 3\r\n    {row: 3, column: 0, tile: new AbalonBoardTile(TileContent.Empty)},\r\n    {row: 3, column: 1, tile: new AbalonBoardTile(TileContent.Empty)},\r\n    {row: 3, column: 2, tile: new AbalonBoardTile(TileContent.Empty)},\r\n    {row: 3, column: 3, tile: new AbalonBoardTile(TileContent.Empty)},\r\n    {row: 3, column: 4, tile: new AbalonBoardTile(TileContent.Empty)},\r\n    {row: 3, column: 5, tile: new AbalonBoardTile(TileContent.Empty)},\r\n    {row: 3, column: 6, tile: new AbalonBoardTile(TileContent.Empty)},\r\n    {row: 3, column: 7, tile: new AbalonBoardTile(TileContent.Empty)},\r\n\r\n    // row 4\r\n    {row: 4, column: 0, tile: new AbalonBoardTile(TileContent.Empty)},\r\n    {row: 4, column: 1, tile: new AbalonBoardTile(TileContent.Empty)},\r\n    {row: 4, column: 2, tile: new AbalonBoardTile(TileContent.Empty)},\r\n    {row: 4, column: 3, tile: new AbalonBoardTile(TileContent.Empty)},\r\n    {row: 4, column: 4, tile: new AbalonBoardTile(TileContent.Empty)},\r\n    {row: 4, column: 5, tile: new AbalonBoardTile(TileContent.Empty)},\r\n    {row: 4, column: 6, tile: new AbalonBoardTile(TileContent.Empty)},\r\n    {row: 4, column: 7, tile: new AbalonBoardTile(TileContent.Empty)},\r\n    {row: 4, column: 8, tile: new AbalonBoardTile(TileContent.Empty)},\r\n\r\n    // row 5\r\n    {row: 5, column: 0, tile: new AbalonBoardTile(TileContent.Empty)},\r\n    {row: 5, column: 1, tile: new AbalonBoardTile(TileContent.Empty)},\r\n    {row: 5, column: 2, tile: new AbalonBoardTile(TileContent.Empty)},\r\n    {row: 5, column: 3, tile: new AbalonBoardTile(TileContent.Empty)},\r\n    {row: 5, column: 4, tile: new AbalonBoardTile(TileContent.Empty)},\r\n    {row: 5, column: 5, tile: new AbalonBoardTile(TileContent.Empty)},\r\n    {row: 5, column: 6, tile: new AbalonBoardTile(TileContent.Empty)},\r\n    {row: 5, column: 7, tile: new AbalonBoardTile(TileContent.Empty)},\r\n\r\n    // row 6\r\n    {row: 6, column: 0, tile: new AbalonBoardTile(TileContent.BlackSoldier)},\r\n    {row: 6, column: 1, tile: new AbalonBoardTile(TileContent.BlackSoldier)},\r\n    {row: 6, column: 2, tile: new AbalonBoardTile(TileContent.BlackSoldier)},\r\n    {row: 6, column: 3, tile: new AbalonBoardTile(TileContent.BlackSoldier)},\r\n    {row: 6, column: 4, tile: new AbalonBoardTile(TileContent.BlackSoldier)},\r\n    {row: 6, column: 5, tile: new AbalonBoardTile(TileContent.BlackSoldier)},\r\n    {row: 6, column: 6, tile: new AbalonBoardTile(TileContent.BlackSoldier)},\r\n\r\n    // row 7\r\n    {row: 7, column: 0, tile: new AbalonBoardTile(TileContent.BlackSoldier)},\r\n    {row: 7, column: 1, tile: new AbalonBoardTile(TileContent.BlackSoldier)},\r\n    {row: 7, column: 2, tile: new AbalonBoardTile(TileContent.BlackSoldier)},\r\n    {row: 7, column: 3, tile: new AbalonBoardTile(TileContent.BlackSoldier)},\r\n    {row: 7, column: 4, tile: new AbalonBoardTile(TileContent.BlackSoldier)},\r\n    {row: 7, column: 5, tile: new AbalonBoardTile(TileContent.BlackSoldier)},\r\n\r\n    // row 8\r\n    {row: 8, column: 0, tile: new AbalonBoardTile(TileContent.BlackSoldier)},\r\n    {row: 8, column: 1, tile: new AbalonBoardTile(TileContent.BlackSoldier)},\r\n    {row: 8, column: 2, tile: new AbalonBoardTile(TileContent.BlackSoldier)},\r\n    {row: 8, column: 3, tile: new AbalonBoardTile(TileContent.BlackSoldier)},\r\n    {row: 8, column: 4, tile: new AbalonBoardTile(TileContent.BlackSoldier)},\r\n]\r\n\r\nexport {\r\n    initialTiles\r\n}","import React, { useReducer } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport BoardGame from '../BoardGame/BoardGame'\r\nimport { abalonGameReducer, abalonGameInit } from '../../reducers/abalonGame/abalonGameReducer'\r\nimport { AbalonBoardTile, TileContent, AbalonGame, Players } from '../../modules/abalon-game'\r\nimport { initialTiles } from './initialBoardState'\r\nimport { makeStyles, Typography, Divider } from '@material-ui/core'\r\n\r\nexport const AbalonGameContext = React.createContext()\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageTitle: {\r\n        color: \"#E4A148\",\r\n        fontFamily: \"Luminari, fantasy\",\r\n    },\r\n    turnHeader: {\r\n        color: '#BCD39C',\r\n        fontSize: 20,\r\n        fontFamily: \"Luminari, fantasy\",\r\n        position: 'relative',\r\n        right: 5\r\n    },\r\n    appBar: {\r\n        // borderWidth: 1,\r\n        // borderColor: '#E4A148',\r\n        // borderStyle: 'solid',\r\n        // borderTop: 'none',\r\n        // borderLeft: 'none',\r\n        // borderRight: 'none',\r\n        // position: 'relative',\r\n        // left: 15,\r\n        width: '100%',\r\n        display: 'flex',\r\n        alignItems: 'baseline'\r\n    },\r\n    containerBox: {\r\n        height: '100vh'\r\n    },\r\n    boxButton: {\r\n        background: '#BCD39C',\r\n        color: 'white',\r\n        marginTop: 3,\r\n        marginBottom: 3,\r\n    }\r\n}))\r\n\r\nconst AbalonGamePage = props => {\r\n    const { initialBoardState = initialTiles } = props\r\n    const [abalonGameState, abalonGameDispatch] = useReducer(abalonGameReducer, initialBoardState, abalonGameInit)\r\n\r\n    /**@type {AbalonGame} */\r\n    const abalonGame = abalonGameState.abalonGame\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <AbalonGameContext.Provider value={{ abalonGameState, abalonGameDispatch }}>\r\n            <div>\r\n                <div className={classes.appBar}>\r\n                    <span style={{ flexGrow: 1 }}>\r\n                        <h1 className={classes.pageTitle}>\r\n                            Game Is In Session\r\n                        </h1>\r\n                    </span>\r\n                    <Typography className={classes.turnHeader}>\r\n                        Up Next: {abalonGame.turn === Players.White ? 'White': 'Black'}\r\n                    </Typography>\r\n                </div>\r\n                <Divider style={{ marginBottom: 20 }} />\r\n                <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                    <BoardGame />\r\n                </div>\r\n            </div>\r\n        </AbalonGameContext.Provider>\r\n    )\r\n}\r\nAbalonGamePage.propTypes = {\r\n\r\n}\r\n\r\nexport default AbalonGamePage\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Box, makeStyles, Typography, Divider, Button, Dialog, DialogTitle } from \"@material-ui/core\";\r\nimport { Link } from 'react-router-dom';\r\nimport { AppRoutes } from '../../constants';\r\nimport { instructionsURL, instructions2URL } from '../../assets';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    boxTitle: {\r\n        color: \"#E4A148\",\r\n        fontFamily: \"Luminari, fantasy\",\r\n    },\r\n    boxSubHeader: {\r\n        color: '#BCD39C',\r\n        fontSize: 20,\r\n        fontFamily: \"Luminari, fantasy\",\r\n    },\r\n    boxContent: {\r\n        borderWidth: 1,\r\n        borderRadius: 3,\r\n        borderColor: '#E4A148',\r\n        borderStyle: 'double',\r\n        paddingTop: 10,\r\n        paddingBottom: 10,\r\n        paddingLeft: 20,\r\n        paddingRight: 20\r\n    },\r\n    containerBox: {\r\n        height: '100vh'\r\n    },\r\n    boxButton: {\r\n        background: '#BCD39C',\r\n        color: 'white',\r\n        marginTop: 3,\r\n        marginBottom: 3,\r\n    }\r\n}))\r\n\r\nconst StartPage = props => {\r\n    const [isInstructionsDialogOpen, setIsInstructionsDialogOpen] = useState(false)\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <>\r\n            <Dialog \r\n                fullScreen \r\n                onClose={() => setIsInstructionsDialogOpen(false)} \r\n                aria-labelledby=\"simple-dialog-title\" \r\n                open={isInstructionsDialogOpen}\r\n            >\r\n                <Button \r\n                    onClick={() => setIsInstructionsDialogOpen(false)}\r\n                    className={classes.boxButton}\r\n                >\r\n                    Back\r\n                </Button>\r\n                <img src={instructionsURL} />\r\n                <img src={instructions2URL} />\r\n            </Dialog>\r\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\"\r\n                className={classes.containerBox}\r\n            >\r\n                <Box className={classes.boxContent}>\r\n                    <Typography variant=\"h3\" className={classes.boxTitle}>\r\n                        Abalon Game\r\n                    </Typography>\r\n                    <Divider style={{marginBottom: 20}} />\r\n                    <Typography variant=\"caption\" className={classes.boxSubHeader}>\r\n                        Good luck beating this AI\r\n                    </Typography>\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Button\r\n                            className={classes.boxButton}\r\n                            onClick={e => {\r\n                                document.getElementById(\"gotoGameBtn\").click()\r\n                            }}\r\n                        >\r\n                            Let's Play\r\n                        </Button>\r\n                        <Link id=\"gotoGameBtn\" to={AppRoutes.abalonGamePage} />\r\n                        <Button\r\n                            className={classes.boxButton}\r\n                            onClick={e => {\r\n                                setIsInstructionsDialogOpen(true)\r\n                            }}\r\n                        >\r\n                            Game Rules\r\n                        </Button>\r\n                    </Box>\r\n                </Box>\r\n            </Box>        \r\n        </>\r\n    )\r\n}\r\n\r\nStartPage.propTypes = {\r\n\r\n}\r\n\r\nexport default StartPage\r\n","import React, { useReducer } from 'react'\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport AbalonGamePage from './components/AbalonGamePage/AbalonGamePage'\nimport StartPage from './components/StartPage/StartPage'\nimport { AppRoutes } from './constants'\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path={AppRoutes.startPage} render={(props) => <StartPage {...props} />} />\n        <Route exact path={AppRoutes.abalonGamePage} render={(props) => <AbalonGamePage {...props} />} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/empty-marked.5e7db21a.png\";","module.exports = __webpack_public_path__ + \"static/media/black-ball.6bcb523e.png\";","module.exports = __webpack_public_path__ + \"static/media/black-marked.1a94884f.png\";","module.exports = __webpack_public_path__ + \"static/media/black-ball-light-yellow.7d77d272.png\";","module.exports = __webpack_public_path__ + \"static/media/white-ball.2c4ecebf.png\";","module.exports = __webpack_public_path__ + \"static/media/white-marked.9ec9779c.png\";","module.exports = __webpack_public_path__ + \"static/media/white-ball-light-yellow.0399190f.png\";","module.exports = __webpack_public_path__ + \"static/media/back-board.b452512b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/instructions.8e561df1.png\";","module.exports = __webpack_public_path__ + \"static/media/instructions2.c89165a4.png\";"],"sourceRoot":""}